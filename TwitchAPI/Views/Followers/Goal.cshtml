@model FollowerGoal
@inject IOptions<FollowerGoalConfiguration> configOptions
@{
	Layout = null;
	var config = configOptions.Value;
}

<!DOCTYPE html>

<html>
<head>
	<title>Followers Goal</title>
	<style>
		body {
			background-color: #333;
		}

		.followerBar {
			background: @config.EmptyBackgroundColor;
			color: @config.EmptyFontColor;
			width: 100%;
			display: flex;
			flex-wrap: nowrap;
			width: 500px;
			padding: 2px 8px;
		}

		#progress {
			overflow: hidden;
			position: absolute
		}

		#fill {
			background-color: @config.FillBackgroundColor;
			color: @config.FillFontColor;
		}

		.followerBar span {
			font-family: Arial;
			font-size: 16pt;
			font-weight: 600;
			flex: 1;
		}

		.current {
			text-align: center;
		}

		.goal {
			text-align: right;
		}
	</style>
</head>
<body>

	<div id="progress" style="width: @(ViewBag.Width * Model.CurrentValue / Model.GoalValue)px;">
		<div class="followerBar" id="fill" style="width: @(ViewBag.Width)px">
			<span class="caption">@Model.Caption</span>
			<span class="current">@Model.CurrentValue</span>
			<span class="goal">@Model.GoalValue</span>
		</div>
	</div>
	<div class="followerBar" style="width: @(ViewBag.Width)px">
		<span class="caption">@Model.Caption</span>
		<span class="current">@Model.CurrentValue</span>
		<span class="goal">@Model.GoalValue</span>
	</div>


	<script src="~/lib/jquery/dist/jquery.js"></script>
	<script src="~/lib/signalr/signalr.js"></script>


	<script type="text/javascript">

		@*$(function () {

			var fullBarWidth = @ViewBag.Width;
			var goalValue = @Model.GoalValue;

			let hubUrl = '@Url.Content("~/followerstream")';
			let httpConnection = new signalR.httpConnection(hubUrl);
			let hubConnection = new signalR.HubConnection(httpConnection);

			hubConnection.on('OnFollowersCountUpdated', data => {
				document.getElementsByClassName("current")[0].textContent = data;
				document.getElementsByClassName("current")[1].textContent = data;
				document.getElementById().style.width = (fullBarWidth * parseInt(data, 10) / goalValue) + "px";
			});

			hubConnection.start();
		});

		connection.on("dostuff", function (data) {

		});*@
		var fullBarWidth = @ViewBag.Width;
		var goalValue = @Model.GoalValue;

		$().ready(function () {
			window.setInterval(function () {
				$.ajax({
					url: "/api/Followers"
				}).done(function (data) {
					debugger;
					document.getElementsByClassName("current")[0].textContent = data;
					document.getElementsByClassName("current")[1].textContent = data;
					document.getElementById("progress").style.width = (fullBarWidth * parseInt(data, 10) / goalValue) + "px";
				})
			}, 5000)
		});
	</script>

</body>
</html>
